"""
描述
王强决定把年终奖用于购物，他把想买的物品分为两类：主件与附件，附件是从属于某个主件的，下表就是一些主件与附件的例子：
主件	附件
电脑	打印机，扫描仪
书柜	图书
书桌	台灯，文具
工作椅	无
如果要买归类为附件的物品，必须先买该附件所属的主件，且每件物品只能购买一次。
每个主件可以有 0 个、 1 个或 2 个附件。附件不再有从属于自己的附件。
王强查到了每件物品的价格（都是 10 元的整数倍），而他只有 N 元的预算。除此之外，他给每件物品规定了一个重要度，用整数 1 ~ 5 表示。他希望在花费不超过 N 元的前提下，使自己的满意度达到最大。
请你帮助王强计算可获得的最大的满意度。


输入描述：
输入的第 1 行，为两个正整数N，m，用一个空格隔开：

（其中 N （ N<32000 ）表示总钱数， m （m <60 ）为可购买的物品的个数。）


从第 2 行到第 m+1 行，第 j 行给出了编号为 j-1 的物品的基本数据，每行有 3 个非负整数 v p q


（其中 v 表示该物品的价格（ v<10000 ）， p 表示该物品的重要度（ 1 ~ 5 ）， q 表示该物品是主件还是附件。如果 q=0 ，表示该物品为主件，如果 q>0 ，表示该物品为附件， q 是所属主件的编号）
 



输出描述：
 输出一个正整数，为张强可以获得的最大的满意度。

输入：
1000 5
800 2 0
400 5 1
300 5 1
400 3 0
500 2 0
输出：
2200

输入：
50 5
20 3 5
20 3 5
10 3 0
10 2 0
10 1 0

输出：
130
说明：
由第1行可知总钱数N为50以及希望购买的物品个数m为5；
第2和第3行的q为5，说明它们都是编号为5的物品的附件；
第4~6行的q都为0，说明它们都是主件，它们的编号依次为3~5；
所以物品的价格与重要度乘积的总和的最大值为10*1+20*3+20*3=130       
 """

n, m = map(int, input().split())
primary, annex = {}, {}
for i in range(1, m + 1):
    x, y, z = map(int, input().split())
    if z == 0:
        primary[i] = [x, y]
    else:
        if z in annex:
            annex[z].append([x, y])
        else:
            annex[z] = [[x, y]]
dp = [0] * (n + 1)
for key in primary:
    w, v = [], []
    w.append(primary[key][0])  # 1、主件
    v.append(primary[key][0] * primary[key][1])
    if key in annex:  # 存在附件
        w.append(w[0] + annex[key][0][0])  # 2、主件+附件1
        v.append(v[0] + annex[key][0][0] * annex[key][0][1])
        if len(annex[key]) > 1:  # 附件个数为2
            w.append(w[0] + annex[key][1][0])  # 3、主件+附件2
            v.append(v[0] + annex[key][1][0] * annex[key][1][1])
            w.append(w[0] + annex[key][0][0] + annex[key][1][0])  # 4、主件+附件1+附件2
            v.append(
                v[0]
                + annex[key][0][0] * annex[key][0][1]
                + annex[key][1][0] * annex[key][1][1]
            )
    for j in range(n, -1, -10):  # 物品的价格是10的整数倍
        for k in range(len(w)):
            if j - w[k] >= 0:
                dp[j] = max(dp[j], dp[j - w[k]] + v[k])
print(dp[n])
